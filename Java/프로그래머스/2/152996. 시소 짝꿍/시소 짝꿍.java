class Solution {
    public long solution(int[] weights) {
        long[] ws=new long[1001];
        long ret=0;
        // 모든 무게 마킹.
        for(int w: weights) ws[w]++;
        
        // 모든 무게의 2,3,4 배에 대한 비율을 가진 무게 확인.
        for(int i=100; i<1001; i++) {
            // 없는 무게일 경우.
            if(ws[i]==0) continue;
            // 무게가 같은 경우
            // nC2
            ret+=ws[i]*(ws[i]-1)/2;
            
            if(i%2==0) {
                // 2:3 비율의 무게를 가진 명 수 더하기
                int r23=(i/2)*3;
                // 가능한 무게는 1001미만.
                if(r23<1001) ret+=ws[i]*ws[r23]; // ws[i]가 3명이고, ws[r23] 이 2명이라면, 3명이 각각 2명과 짝이 될 수 있음.
            }
            // 2:4 비율의 무게를 가진 명 수 더하기
            // 2:4 == 1:2
            int r24=i*2;
            // 가능한 무게는 1001미만.
            if(r24<1001)ret+=ws[i]*ws[r24]; // ws[i]가 3명이고, ws[r23] 이 2명이라면, 3명이 각각 2명과 짝이 될 수 있음.
            
            
            // 3으로 나눠 떨어지는 무게*토크 라면,
            if(i%3==0) {
                // 3:4 비율의 무게를 가진 명 수 더하기
                int r34=(i/3)*4;
                // 가능한 무게는 1001미만.
                if(r34<1001) ret+=ws[i]*ws[r34]; // ws[i]가 3명이고, ws[r23] 이 2명이라면, 3명이 각각 2명과 짝이 될 수 있음.
            }
            // 4:3, 4:2 같은 앞 숫자가 더 큰 비율을 구하면 오히려 중복 계산.
        }
        
        return ret;
    }
}